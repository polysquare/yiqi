/*
 * tools_factory.cpp.in
 * Skeleton for an autogenerated file containing the short names
 * of all tools paired with their ID and constructor functions
 *
 * See LICENCE.md for Copyright information.
 */

#include <array>

#include "constants.h"
#include "instrumentation_tool.h"
#include "tools_declarations.h"

#define INSTRUMENTATION_TOOL_STRING_NAMES_DEF // DEL
#define INSTRUMENTATION_TOOLS_N 0 // DEL
#define INSTRUMENTATION_TOOLS_FACTORY_PACKAGES // DEL

namespace yconst = yiqi::constants;
namespace yit = yiqi::instrumentation::tools;
namespace yitp = yiqi::instrumentation::tools::programs;
namespace yitc = yiqi::instrumentation::tools::controllers;

yconst::ToolsArray const & yconst::InstrumentationToolNames()
{
    static ToolsArray const names =
    {
        {
            INSTRUMENTATION_TOOL_STRING_NAMES_DEF
        }
    };

    return names;
}

typedef std::array <yit::FactoryPackage, INSTRUMENTATION_TOOLS_N> PackageArray;

PackageArray const &
yit::FactoryPackagesArray ()
{
    static PackageArray const ctors =
    {
        {
            INSTRUMENTATION_TOOLS_FACTORY_PACKAGES
        }
    };

    return ctors;
}

size_t
yconst::NumberOfAvailableTools ()
{
    return INSTRUMENTATION_TOOLS_N;
}